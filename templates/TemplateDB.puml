@startuml TemplateDB
!includesub TemplateBase.puml!BasicSettings
!includesub TemplateBase.puml!CheckerCharacters

setDirection(horizontal)
setBackgroundColor(white)

skinparam class {
    BackgroundColor White
	  ArrowColor DimGray
	  BorderColor RoyalBlue
}

hide methods
hide stereotypes
hide circle

' declarations
  ' LEGACY FEATURES 
  '/ !define primary_key(x) <u><color:yellow><&key></color><color:black> x</color></u>
  '/ !define foreign_key(x) <color:FireBrick><&key></color><color:black> x</color>
  '/ !define unique(x) <&underline> x
  '/ !define not_null(y) <&x> y

'FIXME: Convert this delcaration in funtion or other valid form
!define Table(name) class name 

!unquoted function primary_key($var)
    !return "<u><color:yellow><&key></color><color:black> "+ $var+ "</color></u>"
!endfunction

!unquoted function foreign_key($var)
    !return "<color:FireBrick><&key></color><color:black> "+ $var +"</color>"
!endfunction

!unquoted function unique($var)
    !return "<&underline> "+ $var
!endfunction

!unquoted function null($var)
    !return "<&badge> "+ $var
!endfunction

!unquoted function fk_n($var)
    !return foreign_key(null($var))
!endfunction

' relation
/'--------------------------- Zero or One to Others --------------------------- '/
!unquoted function oneZToOneZ($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable |o%substr("", 0, 1)$line%substr("", 0, 1)o| $secondTable	
    !endif
    !if ($swap =="true")
        $secondTable |o%substr("", 0, 1)$line%substr("", 0, 1)o| $firstTable
    !endif
!endfunction

!unquoted function oneZToOne($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable |o%substr("", 0, 1)$line|| $secondTable
    !endif
    !if ($swap =="true")
        $secondTable ||$line%substr("", 0, 1)o| $firstTable
    !endif
!endfunction

!unquoted function oneZToManyZ($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable |o%substr("", 0, 1)$line%substr("", 0, 1)o{ $secondTable
    !endif
    !if ($swap =="true")
        $secondTable }o%substr("", 0, 1)$line%substr("", 0, 1)o| $firstTable
    !endif
!endfunction

!unquoted function oneZToMany($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
		    $firstTable |o%substr("", 0, 1)$line|{ $secondTable
	  !endif
    !if ($swap =="true")
		    $secondTable }|$line%substr("", 0, 1)o| $firstTable
    !endif
!endfunction

/'--------------------------- One to Others --------------------------- '/
!unquoted function oneToOne($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable ||$line|| $secondTable
    !endif
    !if ($swap =="true")
        $secondTable ||$line|| $firstTable
    !endif
!endfunction

!unquoted function oneToOneZ($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable ||$line%substr("", 0, 1)o| $secondTable
    !endif
    !if ($swap =="true")
        $secondTable |o%substr("", 0, 1)$line|| $firstTable
    !endif
!endfunction

!unquoted function oneToManyZ($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable ||$line%substr("", 0, 1)o{ $secondTable
    !endif
    !if ($swap =="true")
        $secondTable }o%substr("", 0, 1)$line|| $firstTable
    !endif
!endfunction

!unquoted function oneToMany($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable ||$line|{ $secondTable
    !endif
    !if ($swap =="true")
        $secondTable }|$line|| $firstTable
    !endif
!endfunction

/'--------------------------- Zero or Many to Others --------------------------- '/
!unquoted function manyZToOneZ($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable }o%substr("", 0, 1)$line%substr("", 0, 1)o| $secondTable
    !endif
    !if ($swap =="true")
        $secondTable |o%substr("", 0, 1)$line%substr("", 0, 1)o{ $firstTable
    !endif
!endfunction

!unquoted function manyZToOne($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable }o%substr("", 0, 1)$line|| $secondTable
    !endif
    !if ($swap =="true")
        $secondTable ||$line%substr("", 0, 1)o{ $firstTable
    !endif
!endfunction

!unquoted function manyZToManyZ($firstTable, $secondTable, $thirdTable, $swap = "false", $line = "--", $otherLine = ".")
    threeValidArguments($line,$otherLine,$swap)

    !if ($swap =="false")
        $firstTable }o%substr("", 0, 1)$line%substr("", 0, 1)o{ $secondTable
        ($firstTable,$secondTable) $otherLine $thirdTable
    !endif
    !if ($swap =="true")
        $secondTable }o%substr("", 0, 1)$line%substr("", 0, 1)o{ $firstTable
        ($secondTable,$firstTable) $otherLine $thirdTable
    !endif
!endfunction

!unquoted function manyZToMany($firstTable, $secondTable, $thirdTable, $swap = "false", $line = "--", $otherLine = ".")
    threeValidArguments($line,$otherLine,$swap)

    !if ($swap =="false")
        $firstTable }o%substr("", 0, 1)$line|{ $secondTable
        ($firstTable,$secondTable) $otherLine $thirdTable
    !endif
    !if ($swap =="true")
        $secondTable }|$line%substr("", 0, 1)o{ $firstTable
        ($secondTable,$firstTable) $otherLine $thirdTable
    !endif
!endfunction

/'--------------------------- Many to Others --------------------------- '/
!unquoted function manyToOne($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable }|$line|| $secondTable
    !endif
    !if ($swap =="true")
        $secondTable ||$line|{ $firstTable
    !endif
!endfunction

!unquoted function manyToOneZ($firstTable, $secondTable, $swap = "false", $line = "--")
    twoValidArguments($line, $swap)

    !if ($swap =="false")
        $firstTable }|$line%substr("", 0, 1)o| $secondTable
    !endif
    !if ($swap =="true")
        $secondTable |o%substr("", 0, 1)$line|{ $firstTable
    !endif
!endfunction

!unquoted function manyToManyZ($firstTable, $secondTable, $thirdTable, $swap = "false", $line = "--", $otherLine = ".")
    threeValidArguments($line,$otherLine,$swap)

    !if ($swap =="false")
        $firstTable }|$line%substr("", 0, 1)o{ $secondTable
        ($firstTable,$secondTable) $otherLine $thirdTable
    !endif
    !if ($swap =="true")
        $secondTable }o%substr("", 0, 1)$line|{ $firstTable
        ($secondTable,$firstTable) $otherLine $thirdTable
    !endif
!endfunction

!unquoted function manyToMany($firstTable, $secondTable, $thirdTable, $swap = "false", $line = "--", $otherLine = ".")
    threeValidArguments($line,$otherLine,$swap)
    
    !if ($swap =="false")
        $firstTable }|$line|{ $secondTable
        ($firstTable,$secondTable) $otherLine $thirdTable
    !endif
    !if ($swap =="true")
        $secondTable }|$line|{ $firstTable
        ($secondTable,$firstTable) $otherLine $thirdTable
    !endif
!endfunction

!function twoValidArguments($line, $swap)
    !if ( checkCharactersExceptSimpleLine($line) == "true" )
        !assert %false() : "The only recognized characters is: -"
    !endif
    checkBooleanVariable($swap,"swap")
!endfunction

!function threeValidArguments($line, $otherLine, $swap)
    !if ( checkCharactersExceptSimpleLine($line) == "true" )
        !assert %false() : "The only recognized characters is: -"
    !endif
    !if ( checkCharactersExceptDot($otherLine) == "true" )
        !assert %false() : "The only recognized characters is: ."
    !endif
    checkBooleanVariable($swap,"swap")
!endfunction

@enduml